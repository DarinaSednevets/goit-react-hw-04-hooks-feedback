{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","section","Statistics","good","bad","neutral","total","countPositiveFeedbackPercentage","list","item","FeedbackOptions","options","onLeaveFeedback","StyleSheet","buttonsList","map","option","type","name","onClick","btn","Notification","message","notification","App","useState","setGood","setNeutral","setBAd","countTotalFeedback","useMemo","positiveFeedback","Math","round","event","currentTarget","prevgood","prevneutral","prevbad","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,mBCAzDD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,KAAO,8BAA8B,IAAM,+B,gBCA7DD,EAAOC,QAAU,CAAC,aAAe,qC,sICUlBC,EARC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,oCACI,mBAAGC,UAAWC,IAAOC,QAArB,SAA+BJ,IAC9BC,M,gBCOEI,EAXI,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,KAAMC,EAA2D,EAA3DA,IAAKC,EAAsD,EAAtDA,QAASC,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,gCAC7C,OACI,qBAAIR,UAAWC,IAAOQ,KAAtB,UACI,qBAAIT,UAAWC,IAAOS,KAAtB,mBAAmCN,KACnC,qBAAIJ,UAAWC,IAAOS,KAAtB,sBAAsCJ,KACtC,qBAAIN,UAAWC,IAAOS,KAAtB,kBAAkCL,KAClC,qBAAIL,UAAWC,IAAOS,KAAtB,oBAAoCH,KACpC,qBAAIP,UAAWC,IAAOS,KAAtB,gCAAgDF,EAAhD,W,gBCWGG,EAlBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAChC,OACI,qBAAKb,UAAWc,WAAWC,YAA3B,SACIH,EAAQI,KAAI,SAAAC,GAAM,OACd,wBACIC,KAAK,SAELC,KAAMF,EACNG,QAASP,EACTb,UAAWC,IAAOoB,IALtB,SAMKJ,GAJIA,S,gBCDVK,EALM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACI,mBAAGvB,UAAWC,IAAOuB,aAArB,SAAoCD,KC2E7BE,MAvEf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOtB,EAAP,KAAauB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOpB,EAAP,KAAgBsB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOrB,EAAP,KAAYwB,EAAZ,KA6BMC,EAAqBC,mBAAQ,WACjC,OAAO3B,EAAOE,EAAUD,IACvB,CAACD,EAAME,EAASD,IAEbG,EAAkCuB,mBAAQ,WAC9C,IACIC,EAA2B,IAAP5B,EADJ0B,EAEpB,OAAyB,IAFLA,EAESG,KAAKC,MAAMF,GAAoB,IAC3D,CAACF,EAAoB1B,IAMxB,OACE,qCACE,cAAC,EAAD,CAASN,MAAM,wBAAf,SACE,cAAC,EAAD,CACEc,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBA3CqB,SAAAsB,GAE3B,OADiBA,EAAMC,cAAfjB,MAEN,IAAK,OACHQ,GAAQ,SAAAU,GAAQ,OAAIA,EAAW,KAC/B,MACF,IAAK,UACHT,GAAW,SAAAU,GAAW,OAAIA,EAAc,KACxC,MACF,IAAK,MACHT,GAAO,SAAAU,GAAO,OAAIA,EAAU,KAC5B,MACF,QACE,aAiCF,cAAC,EAAD,CAASzC,MAAM,aAAf,SACGgC,EACE,cAAC,EAAD,CACC1B,KAAMA,EACNE,QAASA,EACTD,IAAKA,EACLE,MAAOuB,EACPtB,gCAAiCA,IAElC,cAAC,EAAD,CAAce,QAAQ,4B,MCnEjCiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7d754a2b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__1NlkT\",\"item\":\"Statistics_item__32V_M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__z1F5n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__1QMwo\",\"btn\":\"FeedbackOptions_btn__1X6n3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__24qgC\"};","import styles from './Section.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <section>\r\n            <p className={styles.section}>{title}</p>\r\n            {children}\r\n        </section>\r\n    )\r\n}\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}","import styles from \"./Statistics.module.css\";\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst Statistics = ({ good, bad, neutral, total, countPositiveFeedbackPercentage }) => {\r\n    return (\r\n        <ul className={styles.list}>\r\n            <li className={styles.item}>Good: {good}</li>\r\n            <li className={styles.item}>Neutral: {neutral}</li>\r\n            <li className={styles.item}>Bad: {bad}</li>\r\n            <li className={styles.item}>Total: {total}</li>\r\n            <li className={styles.item}>Positive feedback: {countPositiveFeedbackPercentage}%</li>\r\n        </ul>\r\n    )\r\n}\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n    countPositiveFeedbackPercentage: PropTypes.func.isRequired\r\n}","import styles from \"./FeedbackOptions.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    return (\r\n        <div className={StyleSheet.buttonsList}>{\r\n            options.map(option => (\r\n                <button\r\n                    type=\"button\"\r\n                    key={option}\r\n                    name={option}\r\n                    onClick={onLeaveFeedback}\r\n                    className={styles.btn}>\r\n                    {option}\r\n                </button>\r\n            ))\r\n        }\r\n\r\n        </div>\r\n    )\r\n};\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n}\r\n\r\n","import styles from \"./Notification.module.css\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst Notification = ({ message }) => {\r\n    return (\r\n        <p className={styles.notification}>{message}</p>\r\n    )\r\n};\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}\r\n\r\n","\nimport \"./base.css\"\nimport { useMemo, useState } from \"react\";\nimport Section from \"./components/Section/Section.js\"\nimport Statistics from './components/Statistics/Statistics.js';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions.js';\nimport Notification from \"./components/Notification/Notification\";\n\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBAd] = useState(0);\n\n\n\n\n  const countFeedbackHandler = event => {\n    const { name } = event.currentTarget;\n    switch (name) {\n      case 'good':\n        setGood(prevgood => prevgood + 1)\n        break\n      case 'neutral':\n        setNeutral(prevneutral => prevneutral + 1)\n        break\n      case 'bad':\n        setBAd(prevbad => prevbad + 1)\n        break\n      default:\n        return;\n    }\n  };\n  // const countTotalFeedback = () => {\n  //   return good + neutral + bad;\n  // };\n  // const countPositiveFeedbackPercentage = () => {\n  //   let totalFeedback = countTotalFeedback();\n  //   let positiveFeedback = (good * 100) / totalFeedback;\n  //   return totalFeedback !== 0 ? Math.round(positiveFeedback) : 0;\n\n  const countTotalFeedback = useMemo(() => {\n    return good + neutral + bad;\n  }, [good, neutral, bad]);\n\n  const countPositiveFeedbackPercentage = useMemo(() => {\n    let totalFeedback = countTotalFeedback;\n    let positiveFeedback = (good * 100) / totalFeedback;\n    return totalFeedback !== 0 ? Math.round(positiveFeedback) : 0;\n  }, [countTotalFeedback, good]);\n\n  // useEffect(() => {\n  //   countPositiveFeedbackPercentage();\n  // }, [good, neutral, bad, countPositiveFeedbackPercentage])\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={countFeedbackHandler}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        {countTotalFeedback ?\n          (<Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback}\n            countPositiveFeedbackPercentage={countPositiveFeedbackPercentage}\n          />) :\n          (<Notification message=\"No feedback given\" ></Notification>)\n        }\n      </Section>\n    </>\n  );\n};\n\n\nexport default App;\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}